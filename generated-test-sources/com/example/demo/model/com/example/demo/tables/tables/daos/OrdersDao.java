/*
 * This file is generated by jOOQ.
*/
package com.example.demo.model.com.example.demo.tables.tables.daos;


import com.example.demo.model.com.example.demo.tables.tables.Orders;
import com.example.demo.model.com.example.demo.tables.tables.records.OrdersRecord;

import java.time.LocalDateTime;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Repository
public class OrdersDao extends DAOImpl<OrdersRecord, com.example.demo.model.com.example.demo.tables.tables.pojos.Orders, Integer> {

    /**
     * Create a new OrdersDao without any configuration
     */
    public OrdersDao() {
        super(Orders.ORDERS, com.example.demo.model.com.example.demo.tables.tables.pojos.Orders.class);
    }

    /**
     * Create a new OrdersDao with an attached configuration
     */
    @Autowired
    public OrdersDao(Configuration configuration) {
        super(Orders.ORDERS, com.example.demo.model.com.example.demo.tables.tables.pojos.Orders.class, configuration);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    protected Integer getId(com.example.demo.model.com.example.demo.tables.tables.pojos.Orders object) {
        return object.getOrdernumber();
    }

    /**
     * Fetch records that have <code>orderNumber IN (values)</code>
     */
    public List<com.example.demo.model.com.example.demo.tables.tables.pojos.Orders> fetchByOrdernumber(Integer... values) {
        return fetch(Orders.ORDERS.ORDERNUMBER, values);
    }

    /**
     * Fetch a unique record that has <code>orderNumber = value</code>
     */
    public com.example.demo.model.com.example.demo.tables.tables.pojos.Orders fetchOneByOrdernumber(Integer value) {
        return fetchOne(Orders.ORDERS.ORDERNUMBER, value);
    }

    /**
     * Fetch records that have <code>orderDate IN (values)</code>
     */
    public List<com.example.demo.model.com.example.demo.tables.tables.pojos.Orders> fetchByOrderdate(LocalDateTime... values) {
        return fetch(Orders.ORDERS.ORDERDATE, values);
    }

    /**
     * Fetch records that have <code>requiredDate IN (values)</code>
     */
    public List<com.example.demo.model.com.example.demo.tables.tables.pojos.Orders> fetchByRequireddate(LocalDateTime... values) {
        return fetch(Orders.ORDERS.REQUIREDDATE, values);
    }

    /**
     * Fetch records that have <code>shippedDate IN (values)</code>
     */
    public List<com.example.demo.model.com.example.demo.tables.tables.pojos.Orders> fetchByShippeddate(LocalDateTime... values) {
        return fetch(Orders.ORDERS.SHIPPEDDATE, values);
    }

    /**
     * Fetch records that have <code>status IN (values)</code>
     */
    public List<com.example.demo.model.com.example.demo.tables.tables.pojos.Orders> fetchByStatus(String... values) {
        return fetch(Orders.ORDERS.STATUS, values);
    }

    /**
     * Fetch records that have <code>comments IN (values)</code>
     */
    public List<com.example.demo.model.com.example.demo.tables.tables.pojos.Orders> fetchByComments(String... values) {
        return fetch(Orders.ORDERS.COMMENTS, values);
    }

    /**
     * Fetch records that have <code>customerNumber IN (values)</code>
     */
    public List<com.example.demo.model.com.example.demo.tables.tables.pojos.Orders> fetchByCustomernumber(Integer... values) {
        return fetch(Orders.ORDERS.CUSTOMERNUMBER, values);
    }
}
