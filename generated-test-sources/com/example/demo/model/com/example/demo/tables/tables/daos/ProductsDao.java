/*
 * This file is generated by jOOQ.
*/
package com.example.demo.model.com.example.demo.tables.tables.daos;


import com.example.demo.model.com.example.demo.tables.tables.Products;
import com.example.demo.model.com.example.demo.tables.tables.records.ProductsRecord;

import java.math.BigDecimal;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Repository
public class ProductsDao extends DAOImpl<ProductsRecord, com.example.demo.model.com.example.demo.tables.tables.pojos.Products, String> {

    /**
     * Create a new ProductsDao without any configuration
     */
    public ProductsDao() {
        super(Products.PRODUCTS, com.example.demo.model.com.example.demo.tables.tables.pojos.Products.class);
    }

    /**
     * Create a new ProductsDao with an attached configuration
     */
    @Autowired
    public ProductsDao(Configuration configuration) {
        super(Products.PRODUCTS, com.example.demo.model.com.example.demo.tables.tables.pojos.Products.class, configuration);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    protected String getId(com.example.demo.model.com.example.demo.tables.tables.pojos.Products object) {
        return object.getProductcode();
    }

    /**
     * Fetch records that have <code>productCode IN (values)</code>
     */
    public List<com.example.demo.model.com.example.demo.tables.tables.pojos.Products> fetchByProductcode(String... values) {
        return fetch(Products.PRODUCTS.PRODUCTCODE, values);
    }

    /**
     * Fetch a unique record that has <code>productCode = value</code>
     */
    public com.example.demo.model.com.example.demo.tables.tables.pojos.Products fetchOneByProductcode(String value) {
        return fetchOne(Products.PRODUCTS.PRODUCTCODE, value);
    }

    /**
     * Fetch records that have <code>productName IN (values)</code>
     */
    public List<com.example.demo.model.com.example.demo.tables.tables.pojos.Products> fetchByProductname(String... values) {
        return fetch(Products.PRODUCTS.PRODUCTNAME, values);
    }

    /**
     * Fetch records that have <code>productLine IN (values)</code>
     */
    public List<com.example.demo.model.com.example.demo.tables.tables.pojos.Products> fetchByProductline(String... values) {
        return fetch(Products.PRODUCTS.PRODUCTLINE, values);
    }

    /**
     * Fetch records that have <code>productScale IN (values)</code>
     */
    public List<com.example.demo.model.com.example.demo.tables.tables.pojos.Products> fetchByProductscale(String... values) {
        return fetch(Products.PRODUCTS.PRODUCTSCALE, values);
    }

    /**
     * Fetch records that have <code>productVendor IN (values)</code>
     */
    public List<com.example.demo.model.com.example.demo.tables.tables.pojos.Products> fetchByProductvendor(String... values) {
        return fetch(Products.PRODUCTS.PRODUCTVENDOR, values);
    }

    /**
     * Fetch records that have <code>productDescription IN (values)</code>
     */
    public List<com.example.demo.model.com.example.demo.tables.tables.pojos.Products> fetchByProductdescription(String... values) {
        return fetch(Products.PRODUCTS.PRODUCTDESCRIPTION, values);
    }

    /**
     * Fetch records that have <code>quantityInStock IN (values)</code>
     */
    public List<com.example.demo.model.com.example.demo.tables.tables.pojos.Products> fetchByQuantityinstock(Short... values) {
        return fetch(Products.PRODUCTS.QUANTITYINSTOCK, values);
    }

    /**
     * Fetch records that have <code>buyPrice IN (values)</code>
     */
    public List<com.example.demo.model.com.example.demo.tables.tables.pojos.Products> fetchByBuyprice(BigDecimal... values) {
        return fetch(Products.PRODUCTS.BUYPRICE, values);
    }

    /**
     * Fetch records that have <code>MSRP IN (values)</code>
     */
    public List<com.example.demo.model.com.example.demo.tables.tables.pojos.Products> fetchByMsrp(BigDecimal... values) {
        return fetch(Products.PRODUCTS.MSRP, values);
    }
}
