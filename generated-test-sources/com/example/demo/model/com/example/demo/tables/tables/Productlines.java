/*
 * This file is generated by jOOQ.
*/
package com.example.demo.model.com.example.demo.tables.tables;


import com.example.demo.model.com.example.demo.tables.Classicmodels;
import com.example.demo.model.com.example.demo.tables.Keys;
import com.example.demo.model.com.example.demo.tables.tables.records.ProductlinesRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Productlines extends TableImpl<ProductlinesRecord> {

    private static final long serialVersionUID = -784464826;

    /**
     * The reference instance of <code>classicmodels.productlines</code>
     */
    public static final Productlines PRODUCTLINES = new Productlines();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ProductlinesRecord> getRecordType() {
        return ProductlinesRecord.class;
    }

    /**
     * The column <code>classicmodels.productlines.productLine</code>.
     */
    public final TableField<ProductlinesRecord, String> PRODUCTLINE = createField("productLine", org.jooq.impl.SQLDataType.VARCHAR.length(50).nullable(false), this, "");

    /**
     * The column <code>classicmodels.productlines.textDescription</code>.
     */
    public final TableField<ProductlinesRecord, String> TEXTDESCRIPTION = createField("textDescription", org.jooq.impl.SQLDataType.VARCHAR.length(4000), this, "");

    /**
     * The column <code>classicmodels.productlines.htmlDescription</code>.
     */
    public final TableField<ProductlinesRecord, String> HTMLDESCRIPTION = createField("htmlDescription", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>classicmodels.productlines.image</code>.
     */
    public final TableField<ProductlinesRecord, byte[]> IMAGE = createField("image", org.jooq.impl.SQLDataType.BLOB, this, "");

    /**
     * Create a <code>classicmodels.productlines</code> table reference
     */
    public Productlines() {
        this("productlines", null);
    }

    /**
     * Create an aliased <code>classicmodels.productlines</code> table reference
     */
    public Productlines(String alias) {
        this(alias, PRODUCTLINES);
    }

    private Productlines(String alias, Table<ProductlinesRecord> aliased) {
        this(alias, aliased, null);
    }

    private Productlines(String alias, Table<ProductlinesRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Classicmodels.CLASSICMODELS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<ProductlinesRecord> getPrimaryKey() {
        return Keys.KEY_PRODUCTLINES_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<ProductlinesRecord>> getKeys() {
        return Arrays.<UniqueKey<ProductlinesRecord>>asList(Keys.KEY_PRODUCTLINES_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Productlines as(String alias) {
        return new Productlines(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Productlines rename(String name) {
        return new Productlines(name, null);
    }
}
