/*
 * This file is generated by jOOQ.
*/
package com.example.demo.model.com.example.demo.tables.tables.daos;


import com.example.demo.model.com.example.demo.tables.tables.Employees;
import com.example.demo.model.com.example.demo.tables.tables.records.EmployeesRecord;

import java.util.List;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Repository
public class EmployeesDao extends DAOImpl<EmployeesRecord, com.example.demo.model.com.example.demo.tables.tables.pojos.Employees, Integer> {

    /**
     * Create a new EmployeesDao without any configuration
     */
    public EmployeesDao() {
        super(Employees.EMPLOYEES, com.example.demo.model.com.example.demo.tables.tables.pojos.Employees.class);
    }

    /**
     * Create a new EmployeesDao with an attached configuration
     */
    @Autowired
    public EmployeesDao(Configuration configuration) {
        super(Employees.EMPLOYEES, com.example.demo.model.com.example.demo.tables.tables.pojos.Employees.class, configuration);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    protected Integer getId(com.example.demo.model.com.example.demo.tables.tables.pojos.Employees object) {
        return object.getEmployeenumber();
    }

    /**
     * Fetch records that have <code>employeeNumber IN (values)</code>
     */
    public List<com.example.demo.model.com.example.demo.tables.tables.pojos.Employees> fetchByEmployeenumber(Integer... values) {
        return fetch(Employees.EMPLOYEES.EMPLOYEENUMBER, values);
    }

    /**
     * Fetch a unique record that has <code>employeeNumber = value</code>
     */
    public com.example.demo.model.com.example.demo.tables.tables.pojos.Employees fetchOneByEmployeenumber(Integer value) {
        return fetchOne(Employees.EMPLOYEES.EMPLOYEENUMBER, value);
    }

    /**
     * Fetch records that have <code>lastName IN (values)</code>
     */
    public List<com.example.demo.model.com.example.demo.tables.tables.pojos.Employees> fetchByLastname(String... values) {
        return fetch(Employees.EMPLOYEES.LASTNAME, values);
    }

    /**
     * Fetch records that have <code>firstName IN (values)</code>
     */
    public List<com.example.demo.model.com.example.demo.tables.tables.pojos.Employees> fetchByFirstname(String... values) {
        return fetch(Employees.EMPLOYEES.FIRSTNAME, values);
    }

    /**
     * Fetch records that have <code>extension IN (values)</code>
     */
    public List<com.example.demo.model.com.example.demo.tables.tables.pojos.Employees> fetchByExtension(String... values) {
        return fetch(Employees.EMPLOYEES.EXTENSION, values);
    }

    /**
     * Fetch records that have <code>email IN (values)</code>
     */
    public List<com.example.demo.model.com.example.demo.tables.tables.pojos.Employees> fetchByEmail(String... values) {
        return fetch(Employees.EMPLOYEES.EMAIL, values);
    }

    /**
     * Fetch records that have <code>officeCode IN (values)</code>
     */
    public List<com.example.demo.model.com.example.demo.tables.tables.pojos.Employees> fetchByOfficecode(String... values) {
        return fetch(Employees.EMPLOYEES.OFFICECODE, values);
    }

    /**
     * Fetch records that have <code>reportsTo IN (values)</code>
     */
    public List<com.example.demo.model.com.example.demo.tables.tables.pojos.Employees> fetchByReportsto(Integer... values) {
        return fetch(Employees.EMPLOYEES.REPORTSTO, values);
    }

    /**
     * Fetch records that have <code>jobTitle IN (values)</code>
     */
    public List<com.example.demo.model.com.example.demo.tables.tables.pojos.Employees> fetchByJobtitle(String... values) {
        return fetch(Employees.EMPLOYEES.JOBTITLE, values);
    }
}
